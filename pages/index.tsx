import { useEffect } from 'react'
import Head from 'next/head'
import type { NextPage } from "next"
import { useDispatch, useSelector } from "react-redux"
import { Landing, DashBoard1, DashBoard2 } from '../components/pages/open'
import { selectAuthState, selectJoinState, setJoinState } from '../store/enterprisesSlice'
import { selectEnterprisesState, setEmptyEnterpriseInfoState, setEmptyShareholdersState, setEmptyAdminsState } from '../store/enterprisesSlice'
import { setStepState } from '../store/stepSlice'
import { STEP } from '../store/types'
import { useWeb3React } from '@web3-react/core'

const Home: NextPage = () => {
  const dispatch = useDispatch()
  const { account } = useWeb3React()

  const enterprisesState = useSelector(selectEnterprisesState)
  const joinState = useSelector(selectJoinState)

  useEffect(() => {
    dispatch(setStepState(STEP.INDEX))
    dispatch(setEmptyEnterpriseInfoState(undefined))
    dispatch(setEmptyShareholdersState(undefined))
    dispatch(setEmptyAdminsState(undefined))
  }, [])

  useEffect(() => {
    console.log(account)
    if (account == undefined) {
      dispatch(setJoinState(false))
    }
  }, [account])

  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {!account && ( <Landing /> )}
      {account && enterprisesState.filter((enterprise) => enterprise.mine).length == 0 && !joinState && (<DashBoard1/>)}
      {account && (enterprisesState.filter((enterprise) => enterprise.mine).length != 0 || joinState) && (<DashBoard2/>)}
    </>
  )
}

export default Home